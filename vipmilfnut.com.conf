server {
    listen 80;
    server_name vipmilfnut.com www.vipmilfnut.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name vipmilfnut.com www.vipmilfnut.com;

    ssl_certificate /etc/letsencrypt/live/vipmilfnut.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vipmilfnut.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Let Next.js handle all /_next/* (JS, CSS, media) to avoid path mismatches
    location /_next/ {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Serve public assets directly if you have /static/* files in public/
    location /static/ {
        alias /root/vip-next/public/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # All other routes go to the Next.js app
    location / {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
